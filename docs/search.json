[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "obertwwalker.github.io \n\n\n\n\nRobert W. Walker, Ph. D.\n\n\n\n\n\nRobert W. Walker is an Associate Professor of Quantitative Methods in the Atkinson Graduate School of Management at Willamette University\nHe earned a Ph. D. in political science from the University of Rochester in 2005 and has previously held teaching positions at Dartmouth College, Rice University, Texas A&M University, and Washington University in Saint Louis. His current research develops and applies semi-Markov processes to time-series, cross-section data in international relations and international/comparative political economy. He teaches courses in quantitative methods/applied statistics and microeconomic strategy and previously taught four iterations in the U. S. National Science Foundation funded Empirical Implications of Theoretical Models sequence at Washington University in Saint Louis. His work with Curt Signorino and Muhammet Bas was awarded the Miller Prize for the best article in Political Analysis in 2009.\nHis web presence is rww.science and his github is https://github.com/robertwwalker"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "obertwwalker.github.io \n\n\n\n\nA link to obert’s academic website\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngeoFacets of Credit Quality\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPigeons and Palettes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/A Data Visualization/index.html",
    "href": "posts/A Data Visualization/index.html",
    "title": "geoFacets of Credit Quality",
    "section": "",
    "text": "obertwwalker.github.io \n\n\n\n\nA GeoFacet View of Credit Quality\nIn previous work with Skip Krueger, we conceptualized bond ratings as a multiple rater problem and extracted measure of state level creditworthiness. I had always had it on my list to do something like this and recently ran across a package called geofacet that makes it easy to do. The end result should parse out state level credit risk and showcase the time series of credit risk for each of the states.\nSo here goes.\n\n\nShow the code\nlibrary(haven)\nlibrary(dplyr)\nlibrary(geofacet)\nPew.Data <- read_dta(url(\"https://github.com/robertwwalker/academic-mymod/raw/master/data/Pew/modeledforprediction.dta\"))\nlibrary(tidyverse)\nload(url(\"https://github.com/robertwwalker/academic-mymod/raw/master/data/Pew/Scaled-BR-Pew.RData\"))\nstate.ratings <- data.frame(state_name=Pew.Data$state, statefips=Pew.Data$statefips, year=Pew.Data$fyear, BR.Data)\nstate.ratings.long <- tidyr::gather(state.ratings, sampleno, value, -statefips, -year, -state_name)\nstate.SE <- state.ratings.long %>% group_by(state_name,year) %>% summarise(Credit.Quality=mean(value), t1=quantile(value, probs=0.025), t2=quantile(value, probs=0.975))\nfips <-  data.frame(\nstringsAsFactors = FALSE,\nstate_name = c(\"Alabama\",\"Alaska\",\"Arizona\",\n         \"Arkansas\",\"California\",\"Colorado\",\"Connecticut\",\n         \"Delaware\",\"Florida\",\"Georgia\",\"Hawaii\",\"Idaho\",\n         \"Illinois\",\"Indiana\",\"Iowa\",\"Kansas\",\"Kentucky\",\"Louisiana\",\n         \"Maine\",\"Maryland\",\"Massachusetts\",\"Michigan\",\n         \"Minnesota\",\"Mississippi\",\"Missouri\",\"Montana\",\"Nebraska\",\n         \"Nevada\",\"New Hampshire\",\"New Jersey\",\"New Mexico\",\n         \"New York\",\"North Carolina\",\"North Dakota\",\"Ohio\",\n         \"Oklahoma\",\"Oregon\",\"Pennsylvania\",\"Rhode Island\",\n         \"South Carolina\",\"South Dakota\",\"Tennessee\",\"Texas\",\"Utah\",\n         \"Vermont\",\"Virginia\",\"Washington\",\"West Virginia\",\n         \"Wisconsin\",\"Wyoming\",\"American Samoa\",\"Guam\",\n         \"Northern Mariana Islands\",\"Puerto Rico\",\"Virgin Islands\"),\nstate = c(\"AL\",\"AK\",\"AZ\",\"AR\",\"CA\",\n                \"CO\",\"CT\",\"DE\",\"FL\",\"GA\",\"HI\",\"ID\",\"IL\",\"IN\",\"IA\",\n                \"KS\",\"KY\",\"LA\",\"ME\",\"MD\",\"MA\",\"MI\",\"MN\",\"MS\",\n                \"MO\",\"MT\",\"NE\",\"NV\",\"NH\",\"NJ\",\"NM\",\"NY\",\"NC\",\"ND\",\n                \"OH\",\"OK\",\"OR\",\"PA\",\"RI\",\"SC\",\"SD\",\"TN\",\"TX\",\n                \"UT\",\"VT\",\"VA\",\"WA\",\"WV\",\"WI\",\"WY\",\"AS\",\"GU\",\"MP\",\n                \"PR\",\"VI\"),\nfips = c(\"01\",\"02\",\"04\",\"05\",\"06\",\n         \"08\",\"09\",\"10\",\"12\",\"13\",\"15\",\"16\",\"17\",\"18\",\"19\",\n         \"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\n         \"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\n         \"39\",\"40\",\"41\",\"42\",\"44\",\"45\",\"46\",\"47\",\"48\",\n         \"49\",\"50\",\"51\",\"53\",\"54\",\"55\",\"56\",\"60\",\"66\",\"69\",\n         \"72\",\"78\"))  \nRes1 <- left_join(state.SE, fips, by=c(\"state_name\" = \"state_name\"))\nRes1 %>% ggplot(., aes(x=year, y=Credit.Quality, group=state)) +\n  geom_pointrange(aes(ymin=t1, ymax=t2, colour=state, fill=state), alpha=0.1) + \n  geom_line(aes(colour=state)) +\n  guides(color=\"none\", fill=\"none\") +\n  facet_geo(~ state) +\n  theme_minimal() + \n  theme(axis.text.x = element_text(size=4, angle=45), axis.text.y = element_text(size=6)) + labs(title=\"Credit Quality in the US States\")"
  },
  {
    "objectID": "posts/Another Post/index.html#imgpalr",
    "href": "posts/Another Post/index.html#imgpalr",
    "title": "Pigeons and Palettes",
    "section": "imgpalr",
    "text": "imgpalr\nR has a package called imgpalr that will extract colors from an image. If I need to, it is install.packages(\"imgpalr\").\nIn the following code chunk, I will load the package and then I want to point it to the pigeon image that I downloaded. In my case, it is in the same directory as the R Markdown file and is called Pigeon.png.\nInside the command image_pal(), I point it to an image, I specify how many colors [5], what type of color scheme, I want qualitative, and then some characteristics of the colors. The plot will show me the image alongside the palette though it is upside down.\n\n\nShow the code\nlibrary(imgpalr)\nPigeon.colors <- image_pal(\"img/Pigeon.png\", # This will need to be adjusted to the actual file location on your computer.  Mine is in my downloads.\n          n = 5, # How many colors?\n          type = \"qual\", # Type of palette?\n          saturation = c(0.75, 1), \n          brightness = c(0.75, 1), \n          plot = TRUE, # Show the image and the palette?\n          bw = c(0.7, 0.95)\n          )\n\n\n\n\n\nShow the code\nPigeon.colors\n\n\n[1] \"#F289E3\" \"#E5DD97\" \"#FFB3D5\" \"#9AB9E9\" \"#D0A0EC\"\n\n\nNow I have a palette in the markdown environment called Pigeon.colors."
  },
  {
    "objectID": "posts/Another Post/index.html#data-to-plot",
    "href": "posts/Another Post/index.html#data-to-plot",
    "title": "Pigeons and Palettes",
    "section": "Data to plot",
    "text": "Data to plot\nNow I need some data; I want five categories to match my palette. The rest is junk.\n\n\nShow the code\nJunk.data <- data.frame(Stuff=c(\"Hi\",\"Howdy\",\"Hello\",\"Hola\",\"Hallo\"), vals = runif(5, 0.4, 1))\nJunk.data\n\n\n  Stuff      vals\n1    Hi 0.5613446\n2 Howdy 0.6896407\n3 Hello 0.4568750\n4  Hola 0.6247518\n5 Hallo 0.8638390\n\n\nI want to graph it using a barplot equivalent because I have the height of the bars in vals. Let me use the fill aesthetic to fill the bars in by the five discrete things stored as Stuff. The trick to using it is to manually specify the colors and point it to the Pigeon.colors above.\n\n\nShow the code\nlibrary(ggplot2)\nggplot(Junk.data) + aes(x=Stuff, y=vals, fill=Stuff) + geom_col() + scale_fill_manual(values = Pigeon.colors) + hrbrthemes::theme_ipsum_rc()"
  },
  {
    "objectID": "where.html",
    "href": "where.html",
    "title": "Where",
    "section": "",
    "text": "obertwwalker.github.io \n\n\n\n\nContact obert\n\n\n\nAppointments\nEmail\n\nZoom\nGoogle Scholar\nOffice Hours: 1300 to 1500 Pacific time on Wednesdays"
  },
  {
    "objectID": "links.html",
    "href": "links.html",
    "title": "Links",
    "section": "",
    "text": "obertwwalker.github.io \n\n\n\n\nLinks\n\nTwitter\nThe #rstats hashtag is the best place to start on Twitter.\n #rstats\n\n\nMastodon\nR users are also on Mastodon, an open-source social network that is becoming increasingly popular.1 The #rstats tag is most active on fosstodon.\n fosstodon\n mastodon.social\n #rstats\n\n\nData Science by Design\n(h/t) Ella Kaye for informing me of this.\nIn her words,\n\n\n\n\n\n\nNote\n\n\n\nData Science by Design (DSxD) celebrates creativity in data science and developing a more open, ethical, and inclusive future for data work. They run small conferences and an active slack group. They publish anthologies, both in print and online, collections of work by data designers, scientists, and artists, with each issue on a different theme.\nLink: The site I borrowed the description from.\n\n\n website\n Twitter\n book\n\n\n\n\n\n\nFootnotes\n\n\nDanielle Navarro has an excellent guide for data science folks trying to navigate the fediverse.↩︎"
  }
]